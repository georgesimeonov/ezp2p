<!-- Updated Views/PurchaseOrder/Create.cshtml with supplier integration -->
@model EasyP2P.Web.Models.PurchaseOrderModel

@{
    ViewData["Title"] = "Create Purchase Order";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4>Create Purchase Order</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" id="purchaseOrderForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="PurchaseOrderRequestId" />

                        <div class="mb-3">
                            <label asp-for="ItemName" class="form-label"></label>
                            <input asp-for="ItemName" class="form-control" readonly />
                            <span asp-validation-for="ItemName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Quantity" class="form-label"></label>
                            <input asp-for="Quantity" id="quantity" class="form-control" readonly />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>

                        <!-- NEW: Supplier Selection -->
                        <div class="mb-3">
                            <label asp-for="Supplier" class="form-label fw-bold">
                                Supplier <span class="text-danger">*</span>
                            </label>
                            <select asp-for="Supplier" asp-items="ViewBag.Suppliers" class="form-select" id="supplierSelect">
                            </select>
                            <span asp-validation-for="Supplier" class="text-danger"></span>

                            <!-- NEW: Supplier Information Display -->
                            <div id="supplierInfo" class="mt-2" style="display: none;">
                                <div class="card border-info">
                                    <div class="card-body p-2">
                                        <h6 class="card-title mb-1">Supplier Information</h6>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <small><strong>Contact:</strong> <span id="supplierContact"></span></small><br>
                                                <small><strong>Email:</strong> <span id="supplierEmail"></span></small>
                                            </div>
                                            <div class="col-md-6">
                                                <small><strong>Phone:</strong> <span id="supplierPhone"></span></small><br>
                                                <small><strong>Payment Terms:</strong> <span id="supplierTerms"></span></small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- NEW: Link to create new supplier -->
                            <div class="mt-2">
                                <small class="text-muted">
                                    Don't see your supplier?
                                    <a href="/Supplier/Create" target="_blank" class="text-decoration-none">
                                        <i class="bi bi-plus-circle"></i> Add new supplier
                                    </a>
                                </small>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="UnitPrice" class="form-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="UnitPrice" id="unitPrice" class="form-control" type="number" step="0.01" min="0.01" />
                            </div>
                            <span asp-validation-for="UnitPrice" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="TotalPrice" class="form-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="TotalPrice" id="totalPrice" class="form-control" readonly />
                            </div>
                            <span asp-validation-for="TotalPrice" class="text-danger"></span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">Create Purchase Order</button>
                            <a asp-controller="PurchaseApproval" asp-action="Index" class="btn btn-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Function to calculate total price
        function calculateTotal() {
            const quantityElement = document.getElementById('quantity');
            const unitPriceElement = document.getElementById('unitPrice');
            const totalPriceElement = document.getElementById('totalPrice');

            if (!quantityElement || !unitPriceElement || !totalPriceElement) {
                console.warn('Required elements for calculation not found');
                return;
            }

            const quantity = parseFloat(quantityElement.value) || 0;
            const unitPrice = parseFloat(unitPriceElement.value) || 0;
            const totalPrice = quantity * unitPrice;

            totalPriceElement.value = totalPrice;
        }

        // Initialize when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Calculate initial total
            calculateTotal();

            // Add event listeners with null checks
            const unitPriceElement = document.getElementById('unitPrice');
            if (unitPriceElement) {
                unitPriceElement.addEventListener('input', calculateTotal);
            } else {
                console.warn('Unit price element not found');
            }

            const supplierSelect = document.getElementById('supplierSelect');
            if (supplierSelect) {
                supplierSelect.addEventListener('change', handleSupplierChange);
            } else {
                console.warn('Supplier select element not found');
            }

            // Add form submit handler
            const form = document.getElementById('purchaseOrderForm');
            if (form) {
                form.addEventListener('submit', function(e) {
                    const supplierSelect = document.getElementById('supplierSelect');
                    if (supplierSelect && !supplierSelect.value) {
                        e.preventDefault();
                        alert('Please select a supplier before creating the purchase order.');
                        supplierSelect.focus();
                        return false;
                    }

                    // Recalculate total price before submission
                    calculateTotal();
                });
            } else {
                console.warn('Purchase order form not found');
            }

            // Add visual feedback for form validation
            const inputs = document.querySelectorAll('input[required], select[required]');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.value) {
                        this.classList.add('is-valid');
                        this.classList.remove('is-invalid');
                    } else {
                        this.classList.add('is-invalid');
                        this.classList.remove('is-valid');
                    }
                });
            });
        });
    </script>

    <style>
        .clickable-metric:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .card {
            border-radius: 0.5rem;
        }

        .form-control:focus, .form-select:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .is-valid {
            border-color: #198754;
        }

        .is-invalid {
            border-color: #dc3545;
        }

        .supplier-info-card {
            background-color: #f8f9fa;
            border-left: 4px solid #0d6efd;
        }
    </style>
}