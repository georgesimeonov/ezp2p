// Updated Views/PurchaseOrder/Create.cshtml
@model EasyP2P.Web.Models.PurchaseOrderModel

@{
    ViewData["Title"] = "Create Purchase Order";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4>Create Purchase Order</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" id="purchaseOrderForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="PurchaseOrderRequestId" />

                        <div class="mb-3">
                            <label asp-for="ItemName" class="form-label"></label>
                            <input asp-for="ItemName" class="form-control" readonly />
                            <span asp-validation-for="ItemName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Quantity" class="form-label"></label>
                            <input asp-for="Quantity" id="quantity" class="form-control" readonly />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="UnitPrice" class="form-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="UnitPrice" id="unitPrice" class="form-control" type="number" step="0.01" min="0.01" />
                            </div>
                            <span asp-validation-for="UnitPrice" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="TotalPrice" class="form-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="TotalPrice" id="totalPrice" class="form-control" readonly />
                            </div>
                            <span asp-validation-for="TotalPrice" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Supplier" class="form-label"></label>
                            <input asp-for="Supplier" class="form-control" />
                            <span asp-validation-for="Supplier" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">Create Purchase Order</button>
                            <a asp-controller="PurchaseApproval" asp-action="Index" class="btn btn-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Function to calculate total price
        function calculateTotal() {
            var quantity = parseFloat(document.getElementById('quantity').value) || 0;
            var unitPrice = parseFloat(document.getElementById('unitPrice').value) || 0;
            var totalPrice = quantity * unitPrice;
            document.getElementById('totalPrice').value = totalPrice;
        }

        // Calculate on page load
        document.addEventListener('DOMContentLoaded', function() {
            calculateTotal();

            // Calculate when unit price changes
            document.getElementById('unitPrice').addEventListener('input', calculateTotal);
        });

        // Add form submit handler to ensure total price is calculated before submit
        document.getElementById('purchaseOrderForm').addEventListener('submit', function(e) {
            // Recalculate total price before submission
            calculateTotal();
        });
    </script>
}