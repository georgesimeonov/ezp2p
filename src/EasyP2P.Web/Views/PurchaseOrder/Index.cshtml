@model IEnumerable<EasyP2P.Web.Models.PurchaseOrderViewModel>
@using EasyP2P.Web.Enums
@using EasyP2P.Web.Models
@using System.Security.Claims

@{
    ViewData["Title"] = "Purchase Orders";
    var currentUserRole = (UserRole)Enum.Parse(typeof(UserRole), User.FindFirstValue("UserRole") ?? "Requestor");
    var filterModel = (FilterViewModel)ViewData["FilterModel"];
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Purchase Orders</h2>
        <div>
            <a asp-controller="PurchaseOrderRequest" asp-action="Index" class="btn btn-outline-info me-2">
                <i class="bi bi-file-text"></i> View Requests
            </a>
            @* No "New Purchase Order" button here, as they are created from approved requests *@
        </div>
    </div>

    <div class="row mb-4">
        @{
            var statusGroups = Model.GroupBy(x => x.Status).ToDictionary(g => g.Key, g => g.Count());
        }
        <div class="col-md-2">
            <div class="card text-center status-card clickable-card" data-status-filter-value="PendingApproval" role="button" tabindex="0">
                <div class="card-body">
                    <h5 class="card-title text-warning">@(statusGroups.GetValueOrDefault("PendingApproval", 0))</h5>
                    <p class="card-text">
                        <i class="bi bi-clock"></i> Pending
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center status-card clickable-card" data-status-filter-value="Approved" role="button" tabindex="0">
                <div class="card-body">
                    <h5 class="card-title text-success">@(statusGroups.GetValueOrDefault("Approved", 0))</h5>
                    <p class="card-text">
                        <i class="bi bi-check-circle"></i> Approved
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center status-card clickable-card" data-status-filter-value="Sent" role="button" tabindex="0">
                <div class="card-body">
                    <h5 class="card-title text-info">@(statusGroups.GetValueOrDefault("Sent", 0))</h5>
                    <p class="card-text">
                        <i class="bi bi-send"></i> Sent
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center status-card clickable-card" data-status-filter-value="FullyReceived" role="button" tabindex="0">
                <div class="card-body">
                    <h5 class="card-title text-primary">@(statusGroups.GetValueOrDefault("FullyReceived", 0))</h5>
                    <p class="card-text">
                        <i class="bi bi-check-square"></i> Received
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center status-card clickable-card" data-status-filter-value="Cancelled" role="button" tabindex="0">
                <div class="card-body">
                    <h5 class="card-title text-danger">@(statusGroups.GetValueOrDefault("Cancelled", 0))</h5>
                    <p class="card-text">
                        <i class="bi bi-x-circle"></i> Cancelled
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card text-center status-card clickable-card" data-status-filter-value="" role="button" tabindex="0">
                <div class="card-body border-primary">
                    <h5 class="card-title text-primary">@Model.Count()</h5>
                    <p class="card-text">
                        <i class="bi bi-list-ul"></i> Total
                    </p>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <partial name="_FilterPartial" model="filterModel" />

    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h5>
                All Purchase Orders
                <span class="badge bg-light text-dark total-grid-count">@Model.Count()</span>
                <span class="badge bg-warning text-dark filtered-grid-badge" style="display: none;">Filtered</span>
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="mainGridTable">
                        <thead class="table-light">
                            <tr>
                                <th>
                                    PO ID
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="poId" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    POR ID
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="porId" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Item
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="item" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Quantity
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="quantity" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Unit Price
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="unitPrice" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Total Price
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="totalPrice" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Supplier
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="supplier" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Date
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="date" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>
                                    Status
                                    <button class="btn btn-sm btn-link p-0 sort-btn" data-column="status" data-direction="asc">
                                        <i class="bi bi-arrow-up-down"></i>
                                    </button>
                                </th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr data-po-id="@item.Id"
                                    data-por-id="@item.PurchaseOrderRequestId"
                                    data-item="@item.ItemName.ToLower()"
                                    data-quantity="@item.Quantity"
                                    data-unit-price="@item.UnitPrice"
                                    data-total-price="@item.TotalPrice"
                                    data-supplier="@(item.Supplier?.ToLower() ?? "")"
                                    data-date="@item.OrderDate.ToString("yyyy-MM-dd")"
                                    data-status="@item.Status.ToLower()">
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none fw-bold">
                                            #@item.Id
                                        </a>
                                    </td>
                                    <td>@item.PurchaseOrderRequestId</td>
                                    <td>@item.ItemName</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.UnitPrice.ToString("C")</td>
                                    <td>@item.TotalPrice.ToString("C")</td>
                                    <td>@item.Supplier</td>
                                    <td>@item.OrderDate.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>
                                        <span class="badge bg-@(item.Status == "Created" ? "secondary" :
                                                                item.Status == "PendingApproval" ? "warning" :
                                                                item.Status == "Approved" ? "success" :
                                                                item.Status == "Rejected" ? "danger" :
                                                                item.Status == "Sent" ? "info" :
                                                                item.Status == "Acknowledged" ? "primary" :
                                                                item.Status == "PartiallyReceived" ? "warning" :
                                                                item.Status == "FullyReceived" ? "success" :
                                                                item.Status == "Invoiced" ? "info" :
                                                                item.Status == "ClosedCompleted" ? "dark" :
                                                                item.Status == "Cancelled" ? "danger" : "secondary")">
                                            @item.Status
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="ExportPdf" asp-route-id="@item.Id" class="btn btn-secondary btn-sm ms-1" title="Download PDF">
                                                <i class="bi bi-file-earmark-pdf"></i>
                                            </a>

                                            @{
                                                //TODO: Fix user role checks (User.IsInRole(UserRole.Approver.ToString()) || User.IsInRole(UserRole.Administrator.ToString()))}
                                            }
                                            @if (item.Status == Enum.GetName(PurchaseOrderState.PendingApproval))
                                            {
                                                <form asp-action="Approve" asp-route-id="@item.Id" method="post" style="display: inline;" class="ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-success btn-sm"
                                                            onclick="return confirm('Approve purchase order #@item.Id?')"
                                                            title="Approve">
                                                        <i class="bi bi-check"></i>
                                                    </button>
                                                </form>
                                                <form asp-action="Reject" asp-route-id="@item.Id" method="post" style="display: inline;" class="ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-danger btn-sm"
                                                            onclick="return confirm('Reject purchase order #@item.Id?')"
                                                            title="Reject">
                                                        <i class="bi bi-x"></i>
                                                    </button>
                                                </form>
                                            }

                                            @if (item.Status == Enum.GetName(PurchaseOrderState.PendingPayment))
                                            {
                                                <form asp-action="Pay" asp-route-id="@item.Id" method="post" style="display: inline;" class="ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-success btn-sm" title="Pay">
                                                        <i class="bi bi-credit-card"></i> Pay
                                                    </button>
                                                </form>
                                            }

                                            @{
                                                //TODO: Fix user role checks (User.IsInRole(UserRole.Approver.ToString()) || User.IsInRole(UserRole.Administrator.ToString()))}
                                            }
                                            @if (item.Status == Enum.GetName(PurchaseOrderState.Acknowledged))
                                            {
                                                <form asp-action="AttachDeliveryNote" asp-route-id="@item.Id" method="post" enctype="multipart/form-data" style="display: inline;" class="ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <input type="file" name="deliveryNote" accept=".pdf,.doc,.docx,.jpg,.png" style="display: none;" onchange="this.form.submit()" id="note-@item.Id" />
                                                    <label for="note-@item.Id" class="btn btn-primary btn-sm" title="Attach Delivery Note" style="margin-bottom:0;">
                                                        <i class="bi bi-upload"></i>
                                                    </label>
                                                </form>
                                            }

                                            @if (item.Status == Enum.GetName(PurchaseOrderState.FullyReceived))
                                            {
                                                <form asp-action="AttachInvoice" asp-route-id="@item.Id" method="post" enctype="multipart/form-data" style="display: inline;" class="ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <input type="file" name="invoice" accept=".pdf,.doc,.docx,.jpg,.png" style="display: none;" onchange="this.form.submit()" id="invoice-@item.Id" />
                                                    @if (item.Status == Enum.GetName(PurchaseOrderState.Acknowledged))
                                                    {
                                                        <form asp-action="AttachDeliveryNote" asp-route-id="@item.Id" method="post" enctype="multipart/form-data" style="display: inline;" class="ms-1">
                                                            @Html.AntiForgeryToken()
                                                            <input type="file" name="deliveryNote" accept=".pdf,.doc,.docx,.jpg,.png" style="display: none;" onchange="this.form.submit()" id="note-@item.Id" />
                                                            <label for="note-@item.Id" class="btn btn-success btn-sm" title="Attach Delivery Note" style="margin-bottom:0;">
                                                                <i class="bi bi-truck"></i> Delivery Note
                                                            </label>
                                                        </form>
                                                    }

                                                    @if (item.Status == Enum.GetName(PurchaseOrderState.FullyReceived))
                                                    {
                                                        <form asp-action="AttachInvoice" asp-route-id="@item.Id" method="post" enctype="multipart/form-data" style="display: inline;" class="ms-1">
                                                            @Html.AntiForgeryToken()
                                                            <input type="file" name="invoice" accept=".pdf,.doc,.docx,.jpg,.png" style="display: none;" onchange="this.form.submit()" id="invoice-@item.Id" />
                                                            <label for="invoice-@item.Id" class="btn btn-warning btn-sm" title="Attach Invoice" style="margin-bottom:0;">
                                                                <i class="bi bi-receipt"></i> Invoice
                                                            </label>
                                                        </form>
                                                    }
                                                    <label for="invoice-@item.Id" class="btn btn-primary btn-sm" title="Attach Invoice" style="margin-bottom:0;">
                                                        <i class="bi bi-upload"></i>
                                                    </label>
                                                </form>
                                            }

                                            @{
                                                //TODO: Fix user role checks (User.IsInRole(UserRole.Approver.ToString()) || User.IsInRole(UserRole.Administrator.ToString()))}
                                            }
                                            @if (item.Status != Enum.GetName(PurchaseOrderState.Cancelled) && item.Status != Enum.GetName(PurchaseOrderState.Rejected) && item.Status != Enum.GetName(PurchaseOrderState.Completed))
                                            {
                                                <form asp-action="Cancel" asp-route-id="@item.Id" method="post" style="display: inline;" class="ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-warning btn-sm"
                                                            onclick="return confirm('Cancel purchase order #@item.Id?')"
                                                            title="Cancel">
                                                        <i class="bi bi-x-square"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-inbox display-1 text-muted"></i>
                    <h4 class="text-muted mt-3">No Purchase Orders Found</h4>
                    <p class="text-muted">Create purchase orders from approved purchase order requests.</p>
                    <a asp-controller="PurchaseOrderRequest" asp-action="Index" class="btn btn-primary">
                        <i class="bi bi-file-text"></i> View Requests
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Add your existing styles for .sort-btn, .filter-input, .card, .clickable-card etc. here */
    .sort-btn {
        color: #6c757d;
        text-decoration: none !important;
    }

        .sort-btn:hover {
            color: #0d6efd;
        }

        .sort-btn.active {
            color: #0d6efd;
        }

    .filter-input:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .table tbody tr.filtered-out {
        display: none;
    }

    .card {
        border-radius: 0.75rem;
    }

    .clickable-card {
        cursor: pointer;
        transition: all 0.2s ease;
        border: 2px solid transparent;
    }

        .clickable-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
            border-color: #0d6efd;
        }

    .active-status-card {
        border-color: #0d6efd !important;
        background-color: #f8f9fa;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(13, 110, 253, 0.3);
    }

    .status-card .card-title {
        font-weight: bold;
        font-size: 1.5rem;
    }

    .status-card .card-text {
        font-weight: 500;
        margin-bottom: 0;
    }
</style>

@section Scripts {
    <script src="~/js/shared-grid-filters.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const config = {
                tableId: 'mainGridTable',
                filterContainerId: 'filtersCollapse',
                filterToggleBtnId: 'filtersToggleBtn',
                clearFiltersBtnId: 'clearFiltersBtn',
                applyFiltersBtnId: 'applyFiltersBtn',
                resetFiltersBtnId: 'resetFiltersBtn',
                statusCardClass: 'status-card',
                entityType: 'PurchaseOrder' // Specific for this page
            };
            initializeGridFilters(config);
        });
    </script>
}